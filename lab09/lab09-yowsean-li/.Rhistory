for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs)
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs),
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs)
)
ggplot(data = dat, aes(x = reps, y = freqs)) +
geom_path() +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs)
)
ggplot(data = dat, aes(x = reps, y = freqs)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs[,1])
)
ggplot(data = dat, aes(x = reps, y = freqs)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs[,2])
)
ggplot(data = dat, aes(x = reps, y = freqs)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs)
)
ggplot(data = dat, aes(x = reps, y = freqs)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 5),
freqs = unlist(freqs),
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 5),
freqs = unlist(freqs),
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
dat
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 5),
freqs = unlist(freqs[,1]),
number = factor(rep(0:4, each = 1000))
)
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 5),
freqs = unlist(freqs[1]),
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
dat
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 5),
freqs = unlist(freqs),
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
freqs
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 5),
freqs_0 = freqs[1],
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 5),
freqs = unlist(freqs),
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
freqs
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- vector(mode = "list", length = 5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[[b_count + 1]] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 5),
freqs = unlist(freqs),
number = factor(rep(0:4, each = 1000))
)
ggplot(data = dat, aes(x = reps, y = freqs, group = number)) +
geom_path(aes(color = number)) +
ggtitle("Relative frequencies of number of blue balls")
dat
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs[,2])
)
ggplot(data = dat, aes(x = reps, y = freqs)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs = unlist(freqs)
)
ggplot(data = dat, aes(x = reps, y = freqs)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
dat <- data.frame(
reps = rep(1:1000, 1),
freqs1 = unlist(freqs[,2])
)
ggplot(data = dat, aes(x = reps, y = freqs1)) +
ggtitle("Relative frequencies of number of blue balls")
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
plot(1:input$reps, freqs[, 1], type="l", col="red", xlab='reps', ylab='freqs', main='Relative frequencies of number of blue balls')
box1 <- c('b', 'b', 'r')
box2 <- c('b', 'b', 'r', 'r', 'r', 'w')
drawn <- matrix(nrow=1000, ncol=4)
sim <- function (box1, box2) {
r <- runif(1)
if (r > 0.5) {
sample(box1, 4, replace=TRUE)
} else {
sample(box2, 4, replace=FALSE)
}
}
counts <- c(0,0,0,0,0)
freqs <- matrix(nrow=1000, ncol=5)
for (i in 1:1000) {
drawn[i, ] <- sim(box1, box2)
b_count <- sum(drawn[i, ] == 'b')
counts[b_count + 1] <- counts[b_count + 1] + 1
freqs[i, ] <- counts / i
}
plot(1:1000, freqs[, 1], type="l", col="red", xlab='reps', ylab='freqs', main='Relative frequencies of number of blue balls')
par(new=TRUE)
plot(1:1000, freqs[, 2], type="l", col="brown", ann=FALSE, axes = FALSE)
par(new=TRUE)
plot(1:1000, freqs[, 3], type="l", col="green", ann=FALSE, axes = FALSE)
par(new=TRUE)
plot(1:1000, freqs[, 4], type="l", col="blue", ann=FALSE, axes = FALSE)
par(new=TRUE)
plot(1:1000, freqs[, 5], type="l", col="pink", ann=FALSE, axes = FALSE)
legend(1, 95, legend=c("Line 1", "Line 2"), col=c("red", "blue"), lty=1:2, cex=0.8)
library(shiny); runApp('Documents/stat133/stat133-hws-fall17/lab09/lab09-yowsean-li/app2.R')
runApp('Documents/stat133/stat133-hws-fall17/lab09/lab09-yowsean-li/app2.R')
runApp('Documents/stat133/stat133-hws-fall17/lab09/lab09-yowsean-li/app2.R')
runApp('Documents/stat133/stat133-hws-fall17/lab09/lab09-yowsean-li/app3.R')
