cor_EFF[6] <- -1 * cor_EFF[6]
cor_EFF[7] <- -1 * cor_EFF[7]
cor_EFF[8] <- -1 * cor_EFF[8]
cor_EFF <- arrange(select(as.data.frame(as.table(cor_EFF)), Var1, Freq), desc(Freq))
cor_EFF$Var1 <- factor(cor_EFF$Var1, levels = cor_EFF$Var1)
cor_EFF
barplot(cor_EFF$Var1, cor_EFF$Freq)
cor_EFF <- cor(select(dat, PTS, REB, AST, STL, BLK, Missed_FG, Missed_FT, TO), select(dat, EFF))
cor_EFF[6] <- -1 * cor_EFF[6]
cor_EFF[7] <- -1 * cor_EFF[7]
cor_EFF[8] <- -1 * cor_EFF[8]
cor_EFF <- arrange(select(as.data.frame(as.table(cor_EFF)), Var1, Freq), desc(Freq))
cor_EFF$Var1 <- factor(cor_EFF$Var1, levels = cor_EFF$Var1)
table(cor_EFF)
cor_EFF <- cor(select(dat, PTS, REB, AST, STL, BLK, Missed_FG, Missed_FT, TO), select(dat, EFF))
cor_EFF[6] <- -1 * cor_EFF[6]
cor_EFF[7] <- -1 * cor_EFF[7]
cor_EFF[8] <- -1 * cor_EFF[8]
cor_EFF <- arrange(select(as.data.frame(as.table(cor_EFF)), Var1, Freq), desc(Freq))
cor_EFF$Var1 <- factor(cor_EFF$Var1, levels = cor_EFF$Var1)
table(cor_EFF$EFF)
cor_EFF <- cor(select(dat, PTS, REB, AST, STL, BLK, Missed_FG, Missed_FT, TO), select(dat, EFF))
cor_EFF[6] <- -1 * cor_EFF[6]
cor_EFF[7] <- -1 * cor_EFF[7]
cor_EFF[8] <- -1 * cor_EFF[8]
cor_EFF <- arrange(select(as.data.frame(as.table(cor_EFF)), Var1, Freq), desc(Freq))
cor_EFF$Var1 <- factor(cor_EFF$Var1, levels = cor_EFF$Var1)
table(cor_EFF$Freq)
cor_EFF <- cor(select(dat, PTS, REB, AST, STL, BLK, Missed_FG, Missed_FT, TO), select(dat, EFF))
cor_EFF[6] <- -1 * cor_EFF[6]
cor_EFF[7] <- -1 * cor_EFF[7]
cor_EFF[8] <- -1 * cor_EFF[8]
cor_EFF <- arrange(select(as.data.frame(as.table(cor_EFF)), Var1, Freq), desc(Freq))
cor_EFF$Var1 <- factor(cor_EFF$Var1, levels = cor_EFF$Var1)
table(cor_EFF$Var1)
barplot(cor_EFF$Var1, cor_EFF$Fre)
cor_EFF <- cor(select(dat, PTS, REB, AST, STL, BLK, Missed_FG, Missed_FT, TO), select(dat, EFF))
cor_EFF[6] <- -1 * cor_EFF[6]
cor_EFF[7] <- -1 * cor_EFF[7]
cor_EFF[8] <- -1 * cor_EFF[8]
cor_EFF <- arrange(select(as.data.frame(as.table(cor_EFF)), Var1, Freq), desc(Freq))
cor_EFF$Var1 <- factor(cor_EFF$Var1, levels = cor_EFF$Var1)
cor_EFF
barplot(cor_EFF$Var1, cor_EFF$Fre)
ggplot(data=cor_EFF, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
labs(title = "Correlations between Player Stats and EFF", y = "Correlation")
ggplot(data=cor_EFF, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
labs(title = "Correlations between Player Stats and EFF", y = "Correlation")
ggplot(data=cor_EFF, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
labs(title = "Correlations between Player Stats and EFF", y = "Correlation")
ggplot(data=cor_EFF, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
labs(title = "Correlations between Player Stats and EFF", x = "", y = "Correlation")
ggplot(data = dat, aes(x = EFF, y = Salary)) +
geom_point()
ggplot(data = dat, aes(x = EFF, y = Salary)) +
geom_point() +
geom_smooth(method=loess)
ggplot(data = dat, aes(x = EFF, y = Salary)) +
geom_point() +
geom_smooth(method=lowess)
ggplot(data = dat, aes(x = EFF, y = Salary)) +
geom_point() +
geom_smooth(method='lowess')
plot(dat$EFF, dat$Salary)
plot(dat$EFF, dat$Salary, x="EFF", y="Salary")
plot(dat$EFF, dat$Salary, x="EFF", y="Salary")
plot(dat$EFF, dat$Salary, x="EFF")
plot(dat$EFF, dat$Salary, x="EFF")
plot(dat$EFF, dat$Salary)
plot(dat$EFF, dat$Salary, xlab="EFF", ylab="Salary")
plot(dat$EFF, dat$Salary, xlab="EFF", ylab="Salary")
lines(lowess(dat$EFF, dat$Salary))
plot(dat$EFF, dat$Salary, xlab="EFF", ylab="Salary")
lines(lowess(dat$EFF, dat$Salary))
cor(dat$EFF, dat$Salary)
players2 <- filter(dat, MPG >= 20)
players2
players2 <- filter(dat, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
players2 <- filter(players2, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
players2 <- filter(dat, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
players2 <- filter(dat, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
arrange(players2, desc(EFF))
players2 <- filter(dat, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
arrange(players2, EFF)
players2 <- filter(dat, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
players2 <- filter(dat, MPG < 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
players2 <- filter(dat, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
players2 <- filter(dat, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
players2 <- filter(dat, Experience > 1)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
players2 <- filter(dat, MPG >= 20)
plot(players2$EFF, players2$Salary, xlab="EFF", ylab="Salary")
lines(lowess(players2$EFF, players2$Salary))
cor(players2$EFF, players2$Salary)
stats <- mutate(stats,
missed_fg=field_goals_atts-field_goals_made,
missed_ft=points1_atts-points1-made,
points=points3_made*3+points2_made*2+points1,
rebounds=off_rebounds+def_rebounds,
efficiency=(points+rebounds+assists+steals+blocks
-missed_fg-missed_ft-turnovers)/games_played
)
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
roster <- read_csv('../data/nba2017-roster.csv')
stats <- read_csv('../data/nba2017-stats.csv')
stats <- mutate(stats,
missed_fg=field_goals_atts-field_goals_made,
missed_ft=points1_atts-points1-made,
points=points3_made*3+points2_made*2+points1,
rebounds=off_rebounds+def_rebounds,
efficiency=(points+rebounds+assists+steals+blocks
-missed_fg-missed_ft-turnovers)/games_played
)
stats <- read_csv('../data/nba2017-stats.csv')
stats <- mutate(stats,
missed_fg=field_goals_atts-field_goals_made,
missed_ft=points1_atts-points1-made,
points=points3_made*3+points2_made*2+points1,
rebounds=off_rebounds+def_rebounds,
efficiency=(points+rebounds+assists+steals+blocks
-missed_fg-missed_ft-turnovers)/games_played
)
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
roster <- read_csv('../data/nba2017-roster.csv')
roster <- read_csv('../data/nba2017-roster.csv')
stats <- read_csv('../data/nba2017-stats.csv')
stats <- mutate(stats,
missed_fg=field_goals_atts-field_goals_made,
missed_ft=points1_atts-points1-made,
points=points3_made*3+points2_made*2+points1,
rebounds=off_rebounds+def_rebounds,
efficiency=(points+rebounds+assists+steals+blocks
-missed_fg-missed_ft-turnovers)/games_played
)
library(readr)    # importing data
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
roster <- read_csv('../data/nba2017-roster.csv')
stats <- read_csv('../data/nba2017-stats.csv')
../
ls
ls
roster <- read_csv('../data/nba2017-roster.csv')
stats <- read_csv('../data/nba2017-stats.csv')
stats <- read.csv('../data/nba2017-stats.csv')
roster <- read_csv('../data/nba2017-roster.csv')
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
roster <- read_csv('../data/nba2017-roster.csv')
stats <- read_csv('../data/nba2017-stats.csv')
setwd("~/Documents/stat133/stat133-hws-fall17/hw03/code")
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
roster <- read_csv('../data/nba2017-roster.csv')
stats <- read_csv('../data/nba2017-stats.csv')
stats <- mutate(stats,
missed_fg=field_goals_atts-field_goals_made,
missed_ft=points1_atts-points1-made,
points=points3_made*3+points2_made*2+points1,
rebounds=off_rebounds+def_rebounds,
efficiency=(points+rebounds+assists+steals+blocks
-missed_fg-missed_ft-turnovers)/games_played
)
stats <- mutate(stats,
missed_fg=field_goals_atts-field_goals_made,
missed_ft=points1_atts-points1-made,
points=points3_made*3+points2_made*2+points1_made,
rebounds=off_rebounds+def_rebounds,
efficiency=(points+rebounds+assists+steals+blocks
-missed_fg-missed_ft-turnovers)/games_played
)
stats <- mutate(stats,
missed_fg=field_goals_atts-field_goals_made,
missed_ft=points1_atts-points1_made,
points=points3_made*3+points2_made*2+points1_made,
rebounds=off_rebounds+def_rebounds,
efficiency=(points+rebounds+assists+steals+blocks
-missed_fg-missed_ft-turnovers)/games_played
)
View(stats)
sink(file = '../output/efficiency_summary.txt')
summary(stats$efficiency)
sink()
merge(roster, stats)
roster_stats <- merge(roster, stats)
View(roster_stats)
View(roster_stats)
team <- group_by(roster_stats, team)
View(team)
group_by(roster_stats, team)
source('~/Documents/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
View(team)
View(stats)
team <- group_by(select(roster_stats, team, experience, salary, points3_made, points2_made, team)
team <- group_by(select(roster_stats, team, experience, salary, points3_made, points2_made, team))
View(team)
team <- group_by(select(roster_stats, team, experience, salary, points3_made, points2_made, team))
View(team)
View(roster)
team <- roster_stats %>%
group_by(team) %>%
summarise(
experience=format(round(sum(experience), 2), nsmall = 2),
salary=format(round(sum(salary)/1000000, 2), nsmall = 2),
points3=sum(points3_made),
points2=sum(points2_made),
free_throws=sum(points1_made),
points=points3*3+points2*2+free_throws,
off_rebounds=sum(off_rebounds),
def_rebounds=sum(def_rebounds),
assists=sum(assists),
steals=sum(steals),
blocks=sum(blocks),
turnovers=sum(turnovers),
fouls=sum(fouls),
efficiency=sum(efficiency)
)
team <- roster_stats %>%
group_by(team) %>%
summarise(
experience=format(round(sum(experience), 2), nsmall = 2),
salary=format(round(sum(salary)/1000000, 2), nsmall = 2),
points3=sum(points3_made),
points2=sum(points2_made),
free_throws=sum(points1_made),
points=points3*3+points2*2+free_throws,
off_rebounds=sum(off_rebounds),
def_rebounds=sum(def_rebounds),
assists=sum(assists),
steals=sum(steals),
blocks=sum(blocks),
turnovers=sum(turnovers),
fouls=sum(fouls),
efficiency=sum(efficiency)
)
View(team)
summary(team)
team <- roster_stats %>%
group_by(team) %>%
summarise(
experience=format(round(sum(experience), 2), nsmall = 2),
salary=sum(salary)/1000000,
points3=sum(points3_made),
points2=sum(points2_made),
free_throws=sum(points1_made),
points=points3*3+points2*2+free_throws,
off_rebounds=sum(off_rebounds),
def_rebounds=sum(def_rebounds),
assists=sum(assists),
steals=sum(steals),
blocks=sum(blocks),
turnovers=sum(turnovers),
fouls=sum(fouls),
efficiency=sum(efficiency)
)
source('~/Documents/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
team <- roster_stats %>%
group_by(team) %>%
summarise(
experience=sum(experience),
salary=sum(salary)/1000000,
points3=sum(points3_made),
points2=sum(points2_made),
free_throws=sum(points1_made),
points=points3*3+points2*2+free_throws,
off_rebounds=sum(off_rebounds),
def_rebounds=sum(def_rebounds),
assists=sum(assists),
steals=sum(steals),
blocks=sum(blocks),
turnovers=sum(turnovers),
fouls=sum(fouls),
efficiency=sum(efficiency)
)
summary(team)
sink(file = '../data/teams-summary.txt')
summary(team)
sink()
teams <- roster_stats %>%
group_by(team) %>%
summarise(
experience=sum(experience),
salary=sum(salary)/1000000,
points3=sum(points3_made),
points2=sum(points2_made),
free_throws=sum(points1_made),
points=points3*3+points2*2+free_throws,
off_rebounds=sum(off_rebounds),
def_rebounds=sum(def_rebounds),
assists=sum(assists),
steals=sum(steals),
blocks=sum(blocks),
turnovers=sum(turnovers),
fouls=sum(fouls),
efficiency=sum(efficiency)
)
sink(file = '../data/teams-summary.txt')
summary(team)
sink()
write_csv(teams, '../data/nba2017-teams.csv')
stars(teams[,-1], labels=teams$team)
pdf('../images/teams_star_plot.pdf')
stars(teams[,-1], labels=teams$team)
dev.off()
gplot(data = teams, aes(x=experience, y=salary)) +
geom_point()
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point()
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0)
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=-1, vjust=0)
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=-1)
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=-2)
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text_repel(aes(label=team))
ggplot2(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text_repel(aes(label=team))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_label(aes(label=team))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_label_repel(aes(label=team))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team), size=2)
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team), size=5)
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team), size=3)
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3)
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3, position=position_jitter(width=1, height=2))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3, position=position_jitter(width=1, height=1))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3, position=position_jitter(width=2, height=2))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3, position=position_jitter(width=2, height=2))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3, position=position_jitter(width=2, height=2))
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3)
pdf('../images/experience_salary.pdf')
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3)
dev.off()
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
roster <- read_csv('../data/nba2017-roster.csv')
stats <- read_csv('../data/nba2017-stats.csv')
stats <- mutate(stats,
missed_fg=field_goals_atts-field_goals_made,
missed_ft=points1_atts-points1_made,
points=points3_made*3+points2_made*2+points1_made,
rebounds=off_rebounds+def_rebounds,
efficiency=(points+rebounds+assists+steals+blocks
-missed_fg-missed_ft-turnovers)/games_played
)
sink(file = '../output/efficiency_summary.txt')
summary(stats$efficiency)
sink()
roster_stats <- merge(roster, stats)
teams <- roster_stats %>%
group_by(team) %>%
summarise(
experience=sum(experience),
salary=sum(salary)/1000000,
points3=sum(points3_made),
points2=sum(points2_made),
free_throws=sum(points1_made),
points=points3*3+points2*2+free_throws,
off_rebounds=sum(off_rebounds),
def_rebounds=sum(def_rebounds),
assists=sum(assists),
steals=sum(steals),
blocks=sum(blocks),
turnovers=sum(turnovers),
fouls=sum(fouls),
efficiency=sum(efficiency)
)
sink(file = '../data/teams-summary.txt')
summary(team)
sink()
write_csv(teams, '../data/nba2017-teams.csv')
pdf('../images/teams_star_plot.pdf')
stars(teams[,-1], labels=teams$team)
dev.off()
pdf('../images/experience_salary.pdf')
ggplot(data = teams, aes(x=experience, y=salary)) +
geom_point() +
geom_text(aes(label=team),hjust=0, vjust=0, size=3)
dev.off()
teams[team, salary]
View(teams)
teams[team]
2==TRUE
1==TRUE
0==FALSE
3==FALSE
knitr::opts_chunk$set(echo = TRUE)
dat[dat$height == max(height_v),1]
# creating a basic data frame
my_table1 <- data.frame(
col1 = LETTERS[1:5],
col2 = seq(from = 10, to = 50, by = 10),
col3 = c(TRUE, TRUE, FALSE, TRUE, FALSE)
)
my_table1
# another way to create a basic data frame
my_list <- list(
col1 = LETTERS[1:5],
col2 = seq(from = 10, to = 50, by = 10),
col3 = c(TRUE, TRUE, FALSE, TRUE, FALSE)
)
my_table2 <- data.frame(my_list)
my_table2
# strings as strings (not as factors)
my_table3 <- data.frame(
col1 = LETTERS[1:5],
col2 = seq(from = 10, to = 50, by = 10),
col3 = c(TRUE, TRUE, FALSE, TRUE, FALSE),
stringsAsFactors = FALSE
)
is.data.frame(my_table3)
gsw_starting <- data.frame(
Player = c('Thompson', 'Curry', 'Green', 'Durant', 'Pachulia'),
Position = c('SG', 'PG', 'PF', 'SF', 'C'),
Salary = c(16663575, 12112359, 15330435, 26540100, 2898000),
Points = c(1742, 1999, 776, 1555, 426),
PPG = c(22.3, 25.3, 10.2, 25.1, 6.1),
Rookie = c(FALSE, FALSE, FALSE, FALSE, FALSE),
stringsAsFactors = FALSE
)
gsw_starting
dat <- read.csv('nba2017-players.csv', stringsAsFactors = FALSE)
dim(dat)
head(dat)
str(dat, vec.len = 1)
summary(dat)
dat[dat$height == max(height_v),1]
height_v <- as.vector(dat$height)
max(height_v)
min(height_v)
mean(height_v)
dat[dat$height == max(height_v),1]
dat[dat$height == max(height_v),]
dat[dat$height == max(height_v),1]
