}
if (length(v) %% 2 == 0) {
(v[length(v)/2] + v[(length(v)/2) + 1])/2
} else {
length(v)
#v[length(v)%/%2 + 1]
}
}
get_median(c(5, 2, 13, 2, 4))
5%/%2#get_median(c(5, 2, 13, 2, 4))
get_median(c(5, 2, 13, 2, 4))
get_median <- function(v, na.rm=TRUE) {
if (na.rm == TRUE) {
v <- remove_missing(v)
}
if (length(v) %% 2 == 0) {
(v[length(v)/2] + v[(length(v)/2) + 1])/2
} else {
v[length(v)%/%2 + 1]
}
}
get_median(c(5, 2, 13, 2, 4))
get_median <- function(v, na.rm=TRUE) {
if (na.rm == TRUE) {
v <- remove_missing(v)
}
if (length(v) %% 2 == 0) {
(v[length(v)/2] + v[(length(v)/2) + 1])/2
} else {
v[(length(v)%/%2 + 1)]
}
}
get_median(c(5, 2, 13, 2, 4))
get_median <- function(v, na.rm=TRUE) {
if (na.rm == TRUE) {
v <- remove_missing(v)
}
if (length(v) %% 2 == 0) {
(v[length(v)/2] + v[(length(v)/2) + 1])/2
} else {
v[3]#(length(v)%/%2 + 1)]
}
}
get_median(c(5, 2, 13, 2, 4))
get_median <- function(v, na.rm=TRUE) {
if (na.rm == TRUE) {
v <- remove_missing(v)
}
if (length(v) %% 2 == 0) {
(v[length(v)/2] + v[(length(v)/2) + 1])/2
} else {
v[3]#(length(v)%/%2 + 1)]
}
}
get_median(c(5, 2, 13, 2, 4))
c(5, 2, 13, 2, 4)[3]
remove_missing <- function(v) {
r <- c()
for (i in v) {
if (!is.na(i)) {
r <- c(r, i)
}
}
r
}
get_median <- function(v, na.rm=TRUE) {
if (na.rm == TRUE) {
v <- remove_missing(v)
}
if (length(v) %% 2 == 0) {
(v[length(v)/2] + v[(length(v)/2) + 1])/2
} else {
v[(length(v)%/%2 + 1)]
}
}
get_median(c(5, 2, 13, 2, 4))
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
mean(c(8, 2, 5, NA))
mean(c(8, 2, 5, NA))
get_average(c(8, 2, 5, NA))
test_file('test.R')
get_stdev(c(8, 2, 5, NA)
get_stdev(c(8, 2, 5, NA))
get_stdev(c(8, 2, 5, NA))
sd(c(8, 2, 5, NA))
sd(c(8, 2, 5))
test_file('test.R')
quantile(c(1, 2, 3, NA, 4), .25)
quantile(c(1, 2, 3, 4), .25)
quantile(c(5, 2, 13, 2, 4), .25)
quantile(c(10), .25)
quantile(c(8, 2, 5), .25)
quantile(c(1,2,3,4), .75)
quantile(c(5, 2, 13, 2, 4), .75)
quantile(c(8,2,5), .75)
test_file('test.R')
test_file('test.R')
test_file('test.R')
summary_stats(c(1, 2, 3, NA, 4)
summary_stats(c(1, 2, 3, NA, 4))
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
knitr::opts_chunk$set(echo = TRUE)
github <- "https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2017/master/"
datafile <- "data/mobile-food-sf.csv"
download.file(paste0(github, datafile), destfile = "mobile-food-sf.csv")
dat <- read.csv('mobile-food-sf.csv', stringsAsFactors = FALSE)
# install.packages("stringr")
library(stringr)
dat <- read.csv('mobile-food-sf.csv', stringsAsFactors = FALSE)
install.packages("stringr")
library(stringr)
dat <- read.csv('mobile-food-sf.csv', stringsAsFactors = FALSE)
#install.packages("stringr")
library(stringr)
dat <- read.csv('mobile-food-sf.csv', stringsAsFactors = FALSE)
dat
str_sub(times)
times <- c('12PM', '10AM', '9AM', '8AM')
str_sub(times)
str_sub(times, 1, 2)
str_sub(times, 1, 1)
str_sub(times, -2)
str_sub(times, end=-2)
str_sub(times, end=-3)
str_sub(times, -2)
str_replace(times, pattern = 'AM|PM', replacement = '')
hours <- as.numeric(str_replace(times, pattern = 'AM|PM', replacement = ''))
periods <- str_sub(times, start = -2)
hours
periods
dat
to24(hours, periods)
to24 <- function(hours, periods) {
hr24 <- c()
for (i in 1:length(hours)) {
if (periods[i] == 'PM') {
hr24 <- c(hr24, 12 + hours[i])
} else {
hr24 <- c(hr24, hours[i])
}
}
}
start24 <- 0
to24(hours, periods)
to24 <- function(hours, periods) {
hr24 <- c()
for (i in 1:length(hours)) {
if (periods[i] == 'PM') {
hr24 <- c(hr24, 12 + hours[i])
} else {
hr24 <- c(hr24, hours[i])
}
}
hr24
}
start24 <- 0
to24(hours, periods)
times <- c('12AM', '12PM', '9AM', '8PM')
str_sub(times, end=-3)
str_sub(times, -2)
hours <- as.numeric(str_replace(times, pattern = 'AM|PM', replacement = ''))
periods <- str_sub(times, start = -2)
to24 <- function(hours, periods) {
hr24 <- c()
for (i in 1:length(hours)) {
if (periods[i] == 'PM') {
hr24 <- c(hr24, 12 + hours[i])
} else {
hr24 <- c(hr24, hours[i])
}
}
hr24
}
start24 <- 0
to24(hours, periods)
to24 <- function(hours, periods) {
hr24 <- c()
for (i in 1:length(hours)) {
if (periods[i] == 'PM') {
hr24 <- c(hr24, 12 + hours[i]) %% 12
} else {
hr24 <- c(hr24, hours[i]) %% 12
}
}
hr24
}
start24 <- 0
to24(hours, periods)
to24 <- function(hours, periods) {
hr24 <- c()
for (i in 1:length(hours)) {
if (periods[i] == 'PM') {
hr24 <- c(hr24, 12 + hours[i] %% 12)
} else {
hr24 <- c(hr24, hours[i] %% 12)
}
}
hr24
}
start24 <- 0
to24(hours, periods)
starthrs <- as.numeric(str_replace(dat$starttime, pattern = 'AM|PM', replacement = ''))
startperiods <- str_sub(dat$starttime, start = -2)
start24 <- to24(starthrs, startperiods)
start24
endhrs <- as.numeric(str_replace(dat$endtime, pattern = 'AM|PM', replacement = ''))
endperiods <- str_sub(dat$endtime, start = -2)
dat$duration <- end24 - start24
end24 <- to24(endhrs, endperiods)
dat$end <- end24
dat$duration <- dat$end - dat$start
dat$duration <- c(dat$end) - c(dat$start)
dat$end
dat$start
starthrs <- as.numeric(str_replace(dat$starttime, pattern = 'AM|PM', replacement = ''))
startperiods <- str_sub(dat$starttime, start = -2)
start24 <- to24(starthrs, startperiods)
dat$start <- start24
endhrs <- as.numeric(str_replace(dat$endtime, pattern = 'AM|PM', replacement = ''))
endperiods <- str_sub(dat$endtime, start = -2)
end24 <- to24(endhrs, endperiods)
dat$end <- end24
dat$start
dat$duration <- dat$end - dat$start
dat
dat
locs <- c(
"(37.7651967350509,-122.416451692902)",
"(37.7907890558203,-122.402273431333)",
"(37.7111991003088,-122.394693339395)",
"(37.7773000262759,-122.394812784799)",
NA
)
lat <- lapply(lat_lon, function(x) x[1])
locs <- c(
"(37.7651967350509,-122.416451692902)",
"(37.7907890558203,-122.402273431333)",
"(37.7111991003088,-122.394693339395)",
"(37.7773000262759,-122.394812784799)",
NA
)
lat <- lapply(lat_lon, function(x) x[1])
lat_lon <-str_replace_all(loc1, pattern = '\\(|\\)', replacement = '')
lat_lon <-str_replace_all(loc1, pattern = '\\(|\\)', replacement = '')
locs <- c(
"(37.7651967350509,-122.416451692902)",
"(37.7907890558203,-122.402273431333)",
"(37.7111991003088,-122.394693339395)",
"(37.7773000262759,-122.394812784799)",
NA
)
lat_lon <-str_replace_all(locs, pattern = '\\(|\\)', replacement = '')
lat <- lapply(lat_lon, function(x) x[1])
lat
lat_lon
lat
_lon
_lon
lat_lon
lat
lat_lon <-str_replace_all(locs, pattern = '\\(|\\)', replacement = '')
lat_lon <-str_replace_all(locs, pattern = '\\(|\\)', replacement = '')
lat_lon <-str_replace_all(locs, pattern = '\\(|\\)', replacement = '')
lat_lon <- str_split(lat_lon, pattern = ',')
lat <- lapply(lat_lon, function(x) x[1])
lat
lat
lat_lon <-str_replace_all(dat$Location, pattern = '\\(|\\)', replacement = '')
lat_lon <- str_split(lat_lon, pattern = ',')
lat <- lapply(lat_lon, function(x) x[1])
lat
latitute <- as.numeric(unlist(lat))
latitute <- as.numeric(unlist(lat))
latitude
lat_lon <- str_split(lat_lon, pattern = ',')
lat <- lapply(lat_lon, function(x) x[1])
latitute <- as.numeric(unlist(lat))
latitude
lat_lon <-str_replace_all(dat$Location, pattern = '\\(|\\)', replacement = '')
lat_lon <- str_split(lat_lon, pattern = ',')
lat <- lapply(lat_lon, function(x) x[1])
latitute <- as.numeric(unlist(lat))
latitude
lat_lon <-str_replace_all(dat$Location, pattern = '\\(|\\)', replacement = '')
lat_lon <- str_split(lat_lon, pattern = ',')
lat <- lapply(lat_lon, function(x) x[1])
lat <- as.numeric(unlist(lat))
lat
lon
lon <- lapply(lat_lon, function(x) x[2])
lon
lon <- as.numeric(unlist(lon))
lon
lat
dat$lat <- lat
dat$lon <- lon
library(RgoogleMaps)
install.packages("RgoogleMaps")
install.packages("RgoogleMaps")
library(RgoogleMaps)
library(RgoogleMaps)
library(RgoogleMaps)
# coordinates for center of the map
center <- c(mean(dat$lat, na.rm = TRUE), mean(dat$lon, na.rm = TRUE))
# zoom value
zoom <- min(MaxZoom(range(dat$lat, na.rm = TRUE),
range(dat$lon, na.rm = TRUE)))
# san francisco map
map1 <- GetMap(center=center, zoom=zoom, destfile = "san-francisco.png")
PlotOnStaticMap(map1, dat$lat, dat$lon, col = "#ed4964", pch=20)
install.packages("ggmap")
install.packages("ggmap")
library(ggmap)
install.packages("ggmap")
library(ggmap)
install.packages("ggmap")
library(ggmap)
library(ggmap)
dat <- na.omit(dat)
library(ggmap)
dat <- na.omit(dat)
sbbox <- make_bbox(lon = dat$lon, lat = dat$lat, f = .1)
sbbox
library(ggmap)
dat <- na.omit(dat)
sbbox <- make_bbox(lon = dat$lon, lat = dat$lat, f = .1)
sbbox
# get a 'terrain' map
sf_map <- get_map(location = sbbox, maptype = "terrain", source = "google")
library(ggmap)
dat <- na.omit(dat)
sbbox <- make_bbox(lon = dat$lon, lat = dat$lat, f = .1)
sbbox
# get a 'terrain' map
sf_map <- get_map(location = sbbox, maptype = "terrain", source = "google")
ggmap(sf_map) +
geom_point(data = dat,
mapping = aes(x = lon, y = lat),
color = "red", alpha = 0.2, size = 1)
dat$optionaltext[1:3]
dat$optionaltext[1:3]
foods <- dat$optionaltext[1:10]
burritos <- dat[dat$optionaltext=='Burritos']
burritos
dat
?str_detect
str_detect(dat$optionaltext, "burritos")
str_detect(dat$optionaltext, "Burritos")
str_detect(dat$optionaltext, "urritos")
burritos
burritos <- dat[str_detect(dat$optionaltext, "urritos")]
burritos
burritos <- dat[str_detect(dat$optionaltext, "urritos")]
burritos <- dat[grepl(dat$optionaltext, "burritos", ignore.case=TRUE)]
burritos
grepl(dat$optionaltext, "burritos", ignore.case=TRUE)
grep(dat$optionaltext, "burritos", ignore.case=TRUE)
?grep(dat$optionaltext, "burritos", ignore.case=TRUE)
grep("burritos", dat$optionaltext, ignore.case=TRUE)
grep("burritos", dat$optionaltext, ignore.case=FALSE)
grep("burritos", dat$optionaltext, ignore.case=TRUE)
burritos <- dat[str_detect(dat$optionaltext, "urritos", ignore.case=TRUE)]
burritos <- dat[str_detect(dat$optionaltext, "urritos")]
burritos <- dat[dat$optionaltext[str_detect(dat$optionaltext, "urritos")]]
burritos <- dat[dat$optionaltext(str_detect(dat$optionaltext, "urritos"))]
burritos <- dat[str_detect(dat$optionaltext, "urritos") == TRUE]
foods
burritos <- dat[str_detect(dat$optionaltext, "urritos") == TRUE,]
burritos <- dat[str_detect(dat$optionaltext, "urritos") == TRUE,]
burritos
dat$optionaltext[1:3]
foods <- dat$optionaltext[1:10]
burritos <- dat[str_detect(dat$optionaltext, "urritos") == TRUE,]
ggmap(sf_map) +
geom_point(data = burritos,
mapping = aes(x = lon, y = lat),
color = "blue", alpha = 0.2, size = 1)
dat$optionaltext[1:3]
foods <- dat$optionaltext[1:10]
burritos <- dat[str_detect(dat$optionaltext, "urritos") == TRUE,]
burritos <- na.omit(burritos)
ggmap(sf_map) +
geom_point(data = burritos,
mapping = aes(x = lon, y = lat),
color = "blue", alpha = 0.2, size = 1)
animals <- c('dog', 'cat', 'bird', 'dolphin', 'lion',
'zebra', 'tiger', 'wolf', 'whale', 'eagle',
'pig', 'osprey', 'kangaroo', 'koala')
str_extract(animals, "o*")
str_detect(animals, "o*")
grep("o*", animals, value=TRUE)
grep("o?", animals, value=TRUE)
grep("o*", animals, value=TRUE)
grep("o?", animals, value=TRUE)
grep("o+", animals, value=TRUE)
grep("oo", animals, value=TRUE)
grep("o.*o", animals, value=TRUE)
grep("o.*o", animals, value=TRUE)
grep("o.+o", animals, value=TRUE)
grep("(a|e|i|o|u)(a|e|i|o|u)", animals, value=TRUE)
grep("^(a|e|i|o|u)^(a|e|i|o|u)^(a|e|i|o|u)", animals, value=TRUE)
grep("^[^aeiou]", animals, value=TRUE)
grep("[^aeiou][^aeiou][^aeiou]", animals, value=TRUE)
grep("...", animals, value=TRUE)
grep("^...$", animals, value=TRUE)
grep("^....$", animals, value=TRUE)
grep("o.+o", animals, value=TRUE)
grep("o[^o]+o", animals, value=TRUE)
grep("oao", animals, value=TRUE)
grep("o^o", animals, value=TRUE)
grep("o[^o]", animals, value=TRUE)
grep("\n", files, value=TRUE)
grep("[0-9]", files, value=TRUE)
files <- c('sales1.csv', 'orders.csv', 'sales2.csv',
'sales3.csv', 'europe.csv', 'usa.csv', 'mex.csv',
'CA.csv', 'FL.csv', 'NY.csv', 'TX.csv',
'sales-europe.csv', 'sales-usa.csv', 'sales-mex.csv')
grep("[0-9]", files, value=TRUE)
grep("^[0-9]", files, value=TRUE)
grep("[^0-9]", files, value=TRUE)
grep("^\n", files, value=TRUE)
grep("\n", files, value=TRUE)
grep("^([^0-9])*$", files, value=TRUE)
grep("[a-z]", files, value=TRUE)
grep("[A-Z]", files, value=TRUE)
grep("-", files, value=TRUE)
grep("^([^-])*$", files, value=TRUE)
?str_replace(files, )
str_replace(files, 'csv', 'txt')
str_split(files, '.')
str_split(files, split='.')
str_split(files, pattern='.')
str_split(files[1], pattern='.')
str_split(files, pattern='\.')
str_split(files, pattern='\\.')
split_chars('Go Bears!')
split_chars <- function(str) {
str_split(str, "")
}
split_chars('Go Bears!')
reverse_chars <- function(str) {
rev(str_split(str, ""))
}
reverse_chars <- function(str) {
paste(unlist(rev(str_split(str, "")), collapse=''))
}
reverse_chars("gattaca")
reverse_chars <- function(str) {
paste(unlist(rev(str_split(str, ""))), collapse='')
}
reverse_chars("gattaca")
rev(str_split(str, ""))
reverse_chars <- function(str) {
rev(str_split(str, ""))
}
reverse_chars("gattaca")
reverse_chars <- function(str) {
str_split(str, "")
}
reverse_chars("gattaca")
?rev(str_split(str, ""))
reverse_chars <- function(str) {
rev(str_split(str, ""))
}
reverse_chars("gattaca")
rev(c(1,2,3))
rev(str_split('gat', ''))
str_split('gat', '')
type(str_split('gat', ''))
class(str_split('gat', ''))
reverse_chars <- function(str) {
list.reverse(str_split(str, ""))
}
reverse_chars("gattaca")
reverse_chars <- function(str) {
rev(c(str_split(str, "")))
}
reverse_chars("gattaca")
unlist(str_split(str, ""))
reverse_chars <- function(str) {
unlist(str_split(str, ""))
}
reverse_chars("gattaca")
reverse_chars <- function(str) {
rev(unlist(str_split(str, "")))
}
reverse_chars("gattaca")
paste(rev(unlist(str_split(str, ""))), collapse='')
reverse_chars <- function(str) {
paste(rev(unlist(str_split(str, ""))), collapse='')
}
reverse_chars("gattaca")
reverse_chars("Lumox Maxima")
split_chars('Expecto Patronum')
#install.packages("stringr")
library(stringr)
dat <- read.csv('mobile-food-sf.csv', stringsAsFactors = FALSE)
