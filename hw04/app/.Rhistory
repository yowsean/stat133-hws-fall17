for (len in 0:max(num_chars)) {
print(len)
}
states_list
states_list = c()
names(states_list) = paste(0:max(num_chars), chars, sep='-')
states_list = c()
names(states_list) = paste(min(num_chars):max(num_chars), 'chars', sep='-')
min(num_chars):max(num_chars)
names(states_list) = paste(min(num_chars):max(num_chars), 'chars', sep='-')
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (length(states[num_chars == 4]) > 0) {
if (num_chars %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
}
names(states_list) = paste(min(num_chars):max(num_chars), chars, sep='-')
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (num_chars %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste(min(num_chars):max(num_chars), chars, sep='-')
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (num_chars %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (num_chars %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
states_list
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
states_list
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste(min(num_chars):max(num_chars), chars, sep='-')
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste(min(num_chars):max(num_chars), 'chars', sep='-')
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste((min(num_chars):max(num_chars)), 'chars', sep='-')
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste((min(num_chars):max(num_chars) - 1), 'chars', sep='-')
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
#names(states_list) =
states_list
paste((min(num_chars):max(num_chars)), 'chars', sep='-')
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
#names(states_list) =
#states_list
paste((min(num_chars):max(num_chars)), 'chars', sep='-')
length(paste((min(num_chars):max(num_chars)), 'chars', sep='-'))
length(states_list)
length(paste((min(num_chars):max(num_chars)-1), 'chars', sep='-'))
length(paste((min(num_chars):max(num_chars)-1), 'chars', sep='-'))
length(paste((min(num_chars):max(num_chars)-2), 'chars', sep='-'))
length(paste((min(num_chars):(max(num_chars)-1), 'chars', sep='-'))
length(paste((min(num_chars):(max(num_chars)-1)), 'chars', sep='-'))
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = length(paste((min(num_chars):(max(num_chars)-1)), 'chars', sep='-'))
states_list
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste((min(num_chars):(max(num_chars)-1)), 'chars', sep='-')
states_list
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste((min(num_chars):(max(num_chars)-1)), 'chars', sep='-')
states_list
min(num_chars)
states_list = c()
i <- 0
for (len in min(num_chars):max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
#names(states_list) = paste((min(num_chars):(max(num_chars)-1)), 'chars', sep='-')
states_list
states_list = c()
i <- 0
for (len in 4:max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
#names(states_list) = paste((min(num_chars):(max(num_chars)-1)), 'chars', sep='-')
states_list
states_list = c()
i <- 0
for (len in 3:max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
#names(states_list) = paste((min(num_chars):(max(num_chars)-1)), 'chars', sep='-')
states_list
states_list = c()
i <- 0
for (len in 3:max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste((min(num_chars):(max(num_chars)-1)), 'chars', sep='-')
states_list
states_list = c()
i <- 0
for (len in 3:max(num_chars)) {
if (len %% 2 == 0) {
states_list[i] <- paste(toupper(states[num_chars == len]), collapse = ", ")
i <- i + 1
} else {
states_list[i] <- paste(tolower(states[num_chars == len]), collapse = ", ")
i <- i + 1
}
}
names(states_list) = paste((min(num_chars):(max(num_chars))), 'chars', sep='-')
states_list
temp_convert <- function(x = 1, to = "celsius") {
to <- tolower(to)
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert <- function(x = 1, to = "celsius") {
to <- tolower(to)
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'celsius')
to_celsius <- function(x = 1) {
(x - 32) * (5/9)
}
to_kelvin <- function(x = 1) {
(x + 459.67) * (5/9)
}
to_reaumur <- function(x = 1) {
(x - 32) * (4/9)
}
to_rankine <- function(x = 1) {
x + 459.67
}
temp_convert <- function(x = 1, to = "celsius") {
to <- tolower(to)
switch(to,
"celsius" = to_celsius(x),
"kelvin" = to_kelvin(x),
"reaumur" = to_reaumur(x),
"rankine" = to_rankine(x))
}
temp_convert(30, 'celsius')
temp_convert(30, 'Celsius')
temp_convert(30, 'CELSIUS')
v1 <- c('file1.csv', 'file2.csv', 'file3.csv', 'file4.csv', 'file5.csv', 'file6.csv', 'file7.csv', 'file8.csv', 'file9.csv', 'file10.csv')
v2 <- paste('file', '.csv', sep=0:10)
v1 <- c('file1.csv', 'file2.csv', 'file3.csv', 'file4.csv', 'file5.csv', 'file6.csv', 'file7.csv', 'file8.csv', 'file9.csv', 'file10.csv')
v2 <- paste('file', 0=10, sep='')
v1 <- c('file1.csv', 'file2.csv', 'file3.csv', 'file4.csv', 'file5.csv', 'file6.csv', 'file7.csv', 'file8.csv', 'file9.csv', 'file10.csv')
v2 <- paste('file', 1:10, sep='')
v2
v1 <- c('file1.csv', 'file2.csv', 'file3.csv', 'file4.csv', 'file5.csv', 'file6.csv', 'file7.csv', 'file8.csv', 'file9.csv', 'file10.csv')
v2 <- paste(paste('file', 1:10, sep=''), '.csv', sep='')
v2
v1 <- c('file1.csv', 'file2.csv', 'file3.csv', 'file4.csv', 'file5.csv', 'file6.csv', 'file7.csv', 'file8.csv', 'file9.csv', 'file10.csv')
v2 <- paste(paste('file', 1:10, sep=''), '.csv', sep='')
v3 <- paste('file', paste(1:10, '.csv', sep=''), sep='')
v1
v2
v3
gsub('file', 'dataset', v1)
# name of output file
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("This is the first line", file = outfile)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
# name of output file
outfile <- "output.txt"
# writing to 'outfile.txt'
cat("===", file = outfile)
cat("\n", file = outfile, append = TRUE)
cat("title: Lab 10", file = outfile, append=TRUE)
cat("\n", file = outfile, append = TRUE)
cat("author: Yowsean Li", file = outfile, append=TRUE)
cat("\n", file = outfile, append = TRUE)
cat("date: 11/2/2017", file = outfile, append=TRUE)
cat("\n", file = outfile, append = TRUE)
cat("output: html_document", file=outfile, append=TRUE)
cat("\n", file = outfile, append = TRUE)
cat("===", file = outfile, append=TRUE)
cat("\n\n", file = outfile, append = TRUE)
cat("This is the first line", file = outfile, append=TRUE)
# insert new line
cat("\n", file = outfile, append = TRUE)
cat("A 2nd line", file = "output.txt", append = TRUE)
# insert 2 new lines
cat("\n\n", file = outfile, append = TRUE)
cat("\nThe quick brown fox jumps over the lazy dog\n",
file = outfile, append = TRUE)
colors()
is_color <- function(color) {
Rcolors <- colors()
tolower(color) %in% Rcolors
}
is_color <- function(color) {
Rcolors <- colors()
tolower(color) %in% Rcolors
}
is_color('red')
is_color <- function(color) {
Rcolors <- colors()
tolower(color) %in% Rcolors
}
is_color('redd')
is_color <- function(color) {
Rcolors <- colors()
tolower(color) %in% Rcolors
}
is_color('yellow')  # TRUE
is_color('blu')     # FALSE
is_color('turkuoise') # FALSE
colplot <- function(col) {
plot(runif())
}
colplot('red')
colplot <- function(col) {
plot(runif(10, 0, 1))
}
colplot('red')
colplot <- function(col) {
plot(runif(10, 0, 1), main=paste('Testing color', col))
}
colplot('red')
colplot <- function(col) {
if (is_color(col)) {
plot(runif(10, 0, 1), main=paste('Testing color', col))
}
}
colplot('red')
colplot <- function(col) {
if (is_color(col)) {
plot(runif(10, 0, 1), main=paste('Testing color', col))
}
}
# this should plot
colplot('tomato')
# this stops with error message
colplot('tomate')
colplot <- function(col) {
if (is_color(col)) {
plot(runif(10, 0, 1), main=paste('Testing color', col))
} else {
print(paste('Invalid color', col))
}
}
# this should plot
colplot('tomato')
# this stops with error message
colplot('tomate')
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)[names(letrs)=='a' | names(letrs)=='e' | names(letrs)=='i'| names(letrs)=='o'| names(letrs)=='u']
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)[names(letrs)=='a']
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)[names(letrs)==a]
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)[names(letrs)='a']
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == a]
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == 'a']
vowels
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == 'a' |names(letrcounts) == 'e' |names(letrcounts) == 'i' |names(letrcounts) == 'o' |names(letrcounts) == 'u']
vowels
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == 'a' |names(letrcounts) == 'e' |names(letrcounts) == 'i' |names(letrcounts) == 'o' |names(letrcounts) == 'u']
vowels
consonants <- letrcounts[names(letrcounts) != 'a' |names(letrcounts) != 'e' |names(letrcounts) != 'i' |names(letrcounts) != 'o' |names(letrcounts) != 'u']
consonants
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == 'a' |names(letrcounts) == 'e' |names(letrcounts) == 'i' |names(letrcounts) == 'o' |names(letrcounts) == 'u']
vowels
consonants <- letrcounts[names(letrcounts) != 'a' &names(letrcounts) != 'e' &names(letrcounts) != 'i' &names(letrcounts) != 'o' &names(letrcounts) != 'u']
consonants
count_letters <- function(list) {
letters <- len(list)
vowels <- 0
consonants <- 0
for (l in list) {
if (l == 'a'|l=='e'|l=='i'|l=='o'|l=='u') {
vowels <- vowels + 1
} else {
consonants <- consonants + 1
}
}
}
count_letters(letrs)
count_letters <- function(list) {
letters <- length(list)
vowels <- 0
consonants <- 0
for (l in list) {
if (l == 'a'|l=='e'|l=='i'|l=='o'|l=='u') {
vowels <- vowels + 1
} else {
consonants <- consonants + 1
}
}
print(paste('letters:', letters))
print(paste('vowels:', vowels))
print(paste('consonants:', consonants))
}
count_letters(letrs)
library(shiny); runApp('Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
