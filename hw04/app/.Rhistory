print(paste('Invalid color', col))
}
}
# this should plot
colplot('tomato')
# this stops with error message
colplot('tomate')
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)[names(letrs)=='a' | names(letrs)=='e' | names(letrs)=='i'| names(letrs)=='o'| names(letrs)=='u']
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)[names(letrs)=='a']
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)[names(letrs)==a]
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)[names(letrs)='a']
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
table(letrs)
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == a]
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == 'a']
vowels
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == 'a' |names(letrcounts) == 'e' |names(letrcounts) == 'i' |names(letrcounts) == 'o' |names(letrcounts) == 'u']
vowels
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == 'a' |names(letrcounts) == 'e' |names(letrcounts) == 'i' |names(letrcounts) == 'o' |names(letrcounts) == 'u']
vowels
consonants <- letrcounts[names(letrcounts) != 'a' |names(letrcounts) != 'e' |names(letrcounts) != 'i' |names(letrcounts) != 'o' |names(letrcounts) != 'u']
consonants
# random vector of letters
set.seed(1)
letrs <- sample(letters, size = 100, replace = TRUE)
head(letrs)
letrcounts <- table(letrs)
vowels <- letrcounts[names(letrcounts) == 'a' |names(letrcounts) == 'e' |names(letrcounts) == 'i' |names(letrcounts) == 'o' |names(letrcounts) == 'u']
vowels
consonants <- letrcounts[names(letrcounts) != 'a' &names(letrcounts) != 'e' &names(letrcounts) != 'i' &names(letrcounts) != 'o' &names(letrcounts) != 'u']
consonants
count_letters <- function(list) {
letters <- len(list)
vowels <- 0
consonants <- 0
for (l in list) {
if (l == 'a'|l=='e'|l=='i'|l=='o'|l=='u') {
vowels <- vowels + 1
} else {
consonants <- consonants + 1
}
}
}
count_letters(letrs)
count_letters <- function(list) {
letters <- length(list)
vowels <- 0
consonants <- 0
for (l in list) {
if (l == 'a'|l=='e'|l=='i'|l=='o'|l=='u') {
vowels <- vowels + 1
} else {
consonants <- consonants + 1
}
}
print(paste('letters:', letters))
print(paste('vowels:', vowels))
print(paste('consonants:', consonants))
}
count_letters(letrs)
source('functions.R')
source('functions.R')
source('functions.R')
source('functions.R')
test_file('test.R')
setwd("~/Documents/stat133/stat133-hws-fall17/hw04/code")
source('functions.R')
test_file('test.R')
setwd("~/Documents/stat133/stat133-hws-fall17/hw04/code")
setwd("~/Documents/stat133/stat133-hws-fall17/hw04/code")
test_file('test.R')
library(testthat)
source('functions.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
source('~/Documents/stat133/stat133-hws-fall17/hw04/code/tester-script.R', echo=TRUE)
test_file('test.R')
drop_lowest(c(10))
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
test_file('test.R')
library(testthat)
source('functions.R')
sink('../output/test-reporter.txt')
test_file('test.R')
sink()
read.csv('../data/raw/rawscores.csv')
setwd("~/Documents/stat133/stat133-hws-fall17/hw04/code")
read.csv('../data/raw/rawscores.csv')
read.csv('../data/rawdata/rawscores.csv')
dat <- read.csv('../data/rawdata/rawscores.csv')
View(dat)
sink('../output/summary-rawscores.txt')
str(dat)
summary_stats(dat)
print_stats(dat)
sink()
for (col in names(dat)) {
summary_stats(dat$col)
print_stats(dat$col)
}
dat <- read.csv('../data/rawdata/rawscores.csv')
sink('../output/summary-rawscores.txt')
str(dat)
dat <- read.csv('../data/rawdata/rawscores.csv')
sink('../output/summary-rawscores.txt')
str(dat)
for (col in names(dat)) {
summary_stats(dat[,c(col)])
print_stats(dat[,c(col)])
}
sink()
summary_stats(dat[,c('HW1')])
sink()
summary_stats(dat[,c('HW1')])
summary_stats(dat[,'HW1'])
summary_stats(dat[,1])
summary_stats(dat[,2])
names(dat)[1]
sink('../output/summary-rawscores.txt')
str(dat)
for (i in 1:length(dat)) {
print(names(dat)[i])
summary_stats(dat[,i])
print_stats(dat[,i])
}
sink()
sink('../output/summary-rawscores.txt')
str(dat)
for (i in 1:length(dat)) {
print(names(dat)[i])
#summary_stats(dat[,i])
#print_stats(dat[,i])
}
sink()
sink('../output/summary-rawscores.txt')
str(dat)
for (i in 1:length(dat)) {
print(names(dat)[i])
summary_stats(dat[,i])
#print_stats(dat[,i])
}
sink()
summary_stats(dat[,i])
print_stats(dat[,i])
print_stats(dat[,1])
sink('../output/summary-rawscores.txt')
str(dat)
for (i in 1:length(dat)) {
print(names(dat)[i])
summary_stats(dat[,i])
}
sink()
summary_stats(dat[,1])
dat <- read.csv('../data/rawdata/rawscores.csv')
sink('../output/summary-rawscores.txt')
str(dat)
for (i in 1:length(dat)) {
print_stats(summary_stats(dat[,i]))
}
sink()
dat <- read.csv('../data/rawdata/rawscores.csv')
sink('../output/summary-rawscores.txt')
str(dat)
for (i in 1:length(dat)) {
print(names(dat)[i])
print_stats(summary_stats(dat[,i]))
}
sink()
for (col in names(dat)) {
for (i in 1:length(dat[,col])) {
if (is.na(dat[,col][i])) {
is.na(dat[,col][i]) <- 0
}
}
}
View(dat)
for (col in names(dat)) {
for (i in 1:length(dat[,col])) {
if (is.na(dat[,col][i])) {
dat[,col][i] <- 0
}
}
}
dat$QZ1 <- rescale100(dat$QZ1, 0, 12)
source('~/Documents/stat133/stat133-hws-fall17/hw04/code/clean-data-script.R', echo=TRUE)
dat$QZ4 <- rescale100(dat$QZ4, 0, 20)
dat$QZ3 <- rescale100(dat$QZ3, 0, 20)
dat <- read.csv('../data/rawdata/rawscores.csv')
sink('../output/summary-rawscores.txt')
str(dat)
for (i in 1:length(dat)) {
print(names(dat)[i])
print_stats(summary_stats(dat[,i]))
}
sink()
for (col in names(dat)) {
for (i in 1:length(dat[,col])) {
if (is.na(dat[,col][i])) {
dat[,col][i] <- 0
}
}
}
dat$QZ1 <- rescale100(dat$QZ1, 0, 12)
dat$QZ2 <- rescale100(dat$QZ2, 0, 18)
dat$QZ3 <- rescale100(dat$QZ3, 0, 20)
dat$QZ4 <- rescale100(dat$QZ4, 0, 20)
dat$Test1 <- rescale100(dat$EX1, 0, 80)
dat$Test2 <- rescale100(dat$EX2, 0, 90)
dat$Homework <- score_homework(dat$Homework, drop=TRUE)
dat$Homework
length(dat)
length(dat[0])
length(dat[, 0])
length(dat[,0])
length(dat[,1])
for (i in 1:length(dat[,1])) {
print(dat[i,1])
}
dat[1,1:9]
unlist(dat[1,1:9])
unlist(dat[2,1:9])
score_homework(dat[1,1:9], drop=TRUE)
score_homework(dat[2,1:9], drop=TRUE)
score_homework(dat[12,1:9], drop=TRUE)
dat[1,11:14]
hw_scores <- c()
qz_scores <- c()
for (i in 1:length(dat[,1])) {
hw_scores <- c(hw_scores, score_homework(dat[i,1:9], drop=TRUE))
qz_scores <- c(qz_scores, score_homework(dat[i,11:14], drop=TRUE))
}
dat$Homework <- hw_scores
dat$Quiz <- qz_scores
hw_scores <- c()
qz_scores <- c()
lab_scores <- c()
for (i in 1:length(dat[,1])) {
hw_scores <- c(hw_scores, score_homework(dat[i,1:9], drop=TRUE))
qz_scores <- c(qz_scores, score_quiz(dat[i,11:14], drop=TRUE))
lab_scores <- c(lab_scores, score_lab(dat[i, 10]))
}
dat$Homework <- hw_scores
dat$Quiz <- qz_scores
dat$Lab <- lab_scores
overall_scores <- c()
for (i in 1:length(dat[,1])) {
total_sc <- .1*dat[i,'Lab']+.3*dat[i,'Homework']+.15*dat[i,'Quiz']+.2*dat[i,'Test1']+.25*dat[i,'Test2']
overall_scores <- c(overall_scores, total_sc)
}
dat$Overall <- overall_scores
grade_to_letter <- function(grade) {
if (grade >= 95) {
100
} else if (grade >= 95) {
'A+'
} else if (grade >= 90) {
'A'
} else if (grade >= 88) {
'A-'
} else if (grade >= 86) {
'B+'
} else if (grade >= 82) {
'B'
} else if (grade >= 79.5) {
'B-'
} else if (grade >= 77.5) {
'C+'
} else if (grade >= 70) {
'C'
} else if (grade >= 60) {
'C-'
} else if (grade >= 50) {
'D'
} else {
'F'
}
}
letter_grades <- c()
for (i in 1:length(dat[,1])) {
letter_grades <- c(letter_grades, grade_to_letter(dat[i,'Overall']))
}
dat$Grade <- letter_grades
grade_to_letter <- function(grade) {
if (grade >= 95) {
'A+'
} else if (grade >= 90) {
'A'
} else if (grade >= 88) {
'A-'
} else if (grade >= 86) {
'B+'
} else if (grade >= 82) {
'B'
} else if (grade >= 79.5) {
'B-'
} else if (grade >= 77.5) {
'C+'
} else if (grade >= 70) {
'C'
} else if (grade >= 60) {
'C-'
} else if (grade >= 50) {
'D'
} else {
'F'
}
}
letter_grades <- c()
for (i in 1:length(dat[,1])) {
letter_grades <- c(letter_grades, grade_to_letter(dat[i,'Overall']))
}
dat$Grade <- letter_grades
paste('lab', 'c.txt', sep="-")
paste('lab', 'c.txt')
paste('../output/', paste('Lab', 'stats.txt', sep="-"), sep='')
for (i in c('Lab', 'Homework', 'Quiz', 'Test1', 'Test2', 'Overall')){
sink(paste('../output/', paste('Lab', 'stats.txt', sep="-"), sep=''))
print_stats(summary_stats(dat[,i]))
sink()
}
for (i in c('Lab', 'Homework', 'Quiz', 'Test1', 'Test2', 'Overall')){
sink(paste('../output/', paste(i, 'stats.txt', sep="-"), sep=''))
print_stats(summary_stats(dat[,i]))
sink()
}
summary_stats(dat[,'Homework'])
sink('../output/summary-cleanscores.txt')
str(dat)
sink()
write.csv(dat, '../data/cleandata/cleanscores.csv')
library(testthat)
source('functions.R')
sink('../output/test-reporter.txt')
test_file('tests.R')
sink()
library(shiny); runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
ui <- fluidPage(
# App title ----
titlePanel("Tabsets"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Select the random distribution type ----
radioButtons("dist", "Distribution type:",
c("Normal" = "norm",
"Uniform" = "unif",
"Log-normal" = "lnorm",
"Exponential" = "exp")),
# br() element to introduce extra vertical spacing ----
br(),
# Input: Slider for the number of observations to generate ----
sliderInput("n",
"Number of observations:",
value = 500,
min = 1,
max = 1000)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Tabset w/ plot, summary, and table ----
tabsetPanel(type = "tabs",
tabPanel("Plot", plotOutput("plot")),
tabPanel("Summary", verbatimTextOutput("summary")),
tabPanel("Table", tableOutput("table"))
)
)
)
)
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
prop.table(dat[,'Grades'])
prop.table(dat[,'Grade'])
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('~/Documents/stat133/stat133-hws-fall17/hw04/app/gradevis.R')
setwd("~/Documents/stat133/stat133-hws-fall17/hw04/app")
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
runApp('gradevis.R')
